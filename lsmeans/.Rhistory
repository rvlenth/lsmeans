lsmeans(fatsurf.lm, list(~fat,~surf,~fat*surf))
lsm = .Last.value[[3]]
lsm
lsm = cbind(lsm, expand.grid(fat=1:3,surf=1:3))
lsm
with(lsm, interaction.plot(fat,surf,lsmean, type="x"))
with(lsm, interaction.plot(fat,surf,lsmean, type="b"))
lsmeans(fatsurf.lm, pairwise~fat*surf)
summary(fatsurf.lmer)
anova(fatsurf.lmer)
anova(fatsurf.lmer, type="marg")
anova(fatsurf.lmer, type="seq")
fatsurf$spec.vol = c(6.7,4.3,5.7,NA,  7.1,NA,5.9,5.6,  NA,5.5,6.4,5.8,
NA,5.9,7.4,7.1,  NA,5.6,NA,6.8,   6.4,5.1,6.2,6.3,
7.1,5.9,NA,NA,   7.3,6.6,8.1,6.8, NA,7.5,9.1,NA)
fatsurf$svol12 = fatsurf$spec.vol
fatsurf$svol12[c(10:12,18,20)] = NA  # add'l missing vals in Ch.12 case study
fatsurf
fs12.lmer = lmer(svol12 ~ fat*surf + (1|flour), data=fatsurf)
fs12.lm = lm(svol12 ~ flour + fat*surf, data=fatsurf)
lsmeans(fs12.lm, ~surf:fat)
lsm = .Last.value[[1]]
lsm
lsm = cbind(lsm, expand.grid(fat=1:3,surf=1:3))
with(lsm, interaction.plot(fat,surf,lsmean, type="b"))
lsm = cbind(lsm, expand.grid(surf=1:3,fat=1:3))
with(lsm, interaction.plot(fat,surf,lsmean, type="b"))
lsmeans(fs12.lm, ~surf:fat)
lsm = .Last.value[[1]]
lsm = cbind(lsm, expand.grid(surf=1:3,fat=1:3))
with(lsm, interaction.plot(fat,surf,lsmean, type="b"))
q("no")
library(lsmeans)
source('~/.active-rstudio-document')
source('H:/progs/R/devel/LSMEANS/lsmeans/R/lsmeans.R')
source('H:/progs/R/devel/LSMEANS/lsmeans/R/KRstuff.R')
source('H:/progs/R/devel/LSMEANS/0-lsm-tests.R')
fatsurf.lmer
lsmeans(fatsurf.lmer, ctrl.vs.trt ~ fat, ref=1:2)
lsmeans(fatsurf.lmer, trt.vs.ctrl ~ fat, ref=1:2)
source('H:/progs/R/devel/LSMEANS/lsmeans/R/lsmeans.R')
lsmeans(fatsurf.lmer, trt.vs.ctrl ~ fat, ref=1:2)
lsmeans(fatsurf.lmer, trt.vs.ctrl ~ surf, ref=1:2)
lsmeans(fatsurf.lmer, trt.vs.ctrl ~ surf)
lsmeans(fatsurf.lmer, trt.vs.ctrl ~ surf, ref=c(1,3))
DF <- structure(list(bloc = structure(c(1L, 2L, 3L, 4L, 1L, 2L, 3L,
4L, 1L, 2L, 3L, 4L, 1L, 2L, 3L, 4L, 1L, 2L, 3L, 4L, 1L, 2L, 3L,
4L, 1L, 2L, 3L, 4L, 1L, 2L, 3L, 4L, 1L, 2L, 3L, 4L, 1L, 2L, 3L,
4L), .Label = c("1", "2", "3", "4"), class = "factor"), lig = c(1L,
2L, 3L, 4L, 1L, 2L, 3L, 4L, 1L, 2L, 3L, 4L, 1L, 2L, 3L, 4L, 1L,
2L, 3L, 4L, 1L, 2L, 3L, 4L, 1L, 2L, 3L, 4L, 1L, 2L, 3L, 4L, 1L,
2L, 3L, 4L, 1L, 2L, 3L, 4L), col = c(5L, 7L, 3L, 4L, 1L, 8L,
6L, 7L, 4L, 2L, 8L, 6L, 6L, 9L, 1L, 3L, 3L, 4L, 10L, 5L, 8L,
10L, 4L, 9L, 9L, 6L, 7L, 10L, 10L, 3L, 2L, 1L, 7L, 5L, 9L, 2L,
2L, 1L, 5L, 8L), Y = c(40.33, 41.34, 39.83, 45.48, 51.59, 51.09,
48.91, 48.31, 36.76, 42.15, 38.25, 40.35, 43.04, 45.53, 42.84,
47.32, 47.54, 42.3, 43.01, 50.96, 54.77, 49.26, 46.76, 50.76,
38.11, 40.07, 36.83, 39.48, 44.19, 47.09, 45.69, 48.58, 47.63,
47.53, 47.22, 50.44, 53.86, 49.94, 48.93, 52.45), fact1 = structure(c(1L,
1L, 1L, 1L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 3L, 4L, 4L, 4L, 4L, 5L,
5L, 5L, 5L, 6L, 6L, 6L, 6L, 7L, 7L, 7L, 7L, 8L, 8L, 8L, 8L, 9L,
9L, 9L, 9L, 10L, 10L, 10L, 10L), .Label = c("15249", "15251",
"15253", "15255", "15257", "15259", "15261", "15263", "15265",
"15267"), class = "factor")), .Names = c("bloc", "lig", "col",
"Y", "fact1"), row.names = c(NA, -40L), class = "data.frame")
resu <- lm(Y~bloc+fact1, data=DF)
num_ctrl <- c(1,2,4)
lsmeans(resu, trt.vs.pctrl~fact1, ref=num_ctrl)
lsmeans(resu, trt.vs.ctrl~fact1, ref=num_ctrl)
print.data.frame
?print.data.frame
DF
print(DF, row.names=FALSE)
ls()
lsms = lsmeans(resu, trt.vs.ctrl~fact1, ref=num_ctrl)
lsms
class(lsms[[1]])
class(lsms[[1]]) = c("lsms.df","data.frame")
lsms
print.lsms.df = function(object,...) {
NextMethod(,row.names=FALSE)
}
lsms
class(lsms[[2]]) = c("lsms.df","data.frame")
lsms
lsms[[2]]
lsms[[1]]
source('H:/progs/R/devel/LSMEANS/lsmeans/R/lsmeans.R')
source('H:/progs/R/devel/LSMEANS/lsmeans/R/lsmeans.R')
source('H:/progs/R/devel/LSMEANS/lsmeans/R/lsmeans.R')
lsmeans(resu, trt.vs.ctrl~fact1, ref=num_ctrl)
source('H:/progs/R/devel/LSMEANS/lsmeans/R/lsmeans.R')
lsmeans(resu, trt.vs.ctrl~fact1, ref=num_ctrl)
source('H:/progs/R/devel/LSMEANS/lsmeans/R/lsmeans.R')
lsmeans(resu, trt.vs.ctrl~fact1, ref=num_ctrl)
source('H:/progs/R/devel/LSMEANS/lsmeans/R/lsmeans.R')
lsmeans(resu, trt.vs.ctrl~fact1, ref=num_ctrl)
source('H:/progs/R/devel/LSMEANS/lsmeans/R/lsmeans.R')
lsmeans(resu, trt.vs.ctrl~fact1, ref=num_ctrl)
source('H:/progs/R/devel/LSMEANS/lsmeans/R/lsmeans.R')
lsmeans(resu, trt.vs.ctrl~fact1, ref=num_ctrl)
print.data.frame(.Last.value[1])
source('H:/progs/R/devel/LSMEANS/lsmeans/R/lsmeans.R')
lsmeans(resu, trt.vs.ctrl~fact1, ref=num_ctrl)
source('H:/progs/R/devel/LSMEANS/lsmeans/R/lsmeans.R')
lsmeans(resu, trt.vs.ctrl~fact1, ref=num_ctrl)
source('H:/progs/R/devel/LSMEANS/lsmeans/R/lsmeans.R')
source('H:/progs/R/devel/LSMEANS/lsmeans/R/lsmeans.R')
source('H:/progs/R/devel/LSMEANS/lsmeans/R/lsmeans.R')
lsmeans(resu, trt.vs.ctrl~fact1, ref=num_ctrl)
lsmeans(resu, trt.vs.ctrl~fact1, ref=num_ctrl, glh=list())
plot(.Last.value[[2]])
g = lsmeans(resu, trt.vs.ctrl~fact1, ref=num_ctrl, glh=list())[[2]]
class(g)
summary.glht
multcomp:::summary.glht
?chkdots
chkdots
multcomp:::chkdots
OatsPoly.lmer = lmer(yield ~ Variety + poly(nitro, 2) + (1 | Block/Variety), data=Oats)
Oats.lsms = lsmeans(OatsPoly.lmer, ~ nitro:Variety)
lsmeans(OatsPoly.lmer, ~ Variety)
lsmeans(OatsPoly.lmer, ~ nitro)
ls()
nutr
nutrition = nutr
levels(nutrition$group)
levels(nutrition$group) = c("no aid","food stamps")
levels(nutrition$group)
levels(nutrition$race)
levels(nutrition$race) = c("Black","Hispanic","White")
levels(nutrition$group) = c("No aid","Food stamps")
nutrition
nutr.lm = lm(gain ~ (age + group + race)^2, data=nutrition)
(nutr.lsms = lsmeans(nutr.lm, ~ age:group:race))
summary(nutr.lm)
save(nutrition, file="h:/progs/R/devel/LSMEANS/nutr.RData")
q("no")
library(lsmeans)
example(lsmeans)
lsmeans(Oats.lmer, my.own ~ Variety,
contr = list(my.own = list(G.vs.M = c(1,-1,0), GM.vs.V = c(.5,.5,-1))))
contr = list(my.own = list(G.vs.M = c(1,-1,0), GM.vs.V = c(.5,.5,-1))), adjust="none")
lsmeans(Oats.lmer, my.own ~ Variety,
contr = list(my.own = list(G.vs.M = c(1,-1,0), GM.vs.V = c(.5,.5,-1))), adjust="sidak")
lsmeans(Oats.lmer, my.own ~ Variety,
contr = list(my.own = list(G.vs.M = c(1,-1,0), GM.vs.V = c(.5,.5,-1))), adjust="none")
adjtbl = c("auto","tukey","sidak",p.adjust.methods)
pmatch("none", adjtbl)
dir()
pwd()
cwd()
getwd()
setwd("H:/progs/R/devel/LSMEANS/lsmeans/man")
setwd("H:/progs/R/devel/LSMEANS")
setwd("H:/progs/R/devel/LSMEANS/lsmeans")
args(prompt)
prompt(nutrition, "man/nutrition.Rd")
prompt(fiber, "man/fiber.Rd")
require(lsmeans)
nutr.aov = aov(gain ~ (group + age + race)^2, data = nutrition)
anova(nutr.aov)
nutr.lsm = lsmeans(nutr.aov, list(pairwise ~ group|race, pairwise ~ race|group),
at = list(age=c("2","3"), race=c("Black","White")))
print(nutr.lsm, omit=3)
with(nutr.lsm[[1]], interaction.plot(group, race, lsmean))
with(nutr.lsm[[1]], interaction.plot(group, race, lsmean, type="b"))
args(anova.aov)
args(anova)
?anova
?aov
xyplot(gain~age|race*group, data=nutrition)
nutr.lsm = lsmeans(nutr.aov, list(pairwise ~ group|race, pairwise ~ race|group),
at = list(age="3", race=c("Black","White")))
with(nutr.lsm[[1]], interaction.plot(group, race, lsmean, type="b"))
nutr.lsm = lsmeans(nutr.aov, list(pairwise ~ group|race, pairwise ~ race|group),
at = list(age="3"))
with(nutr.lsm[[1]], interaction.plot(group, race, lsmean, type="b"))
print(nutr.lsm, omit=3)
nutr.lsm = lsmeans(nutr.aov, list(pairwise ~ group|race, pairwise ~ race|group),
at = list(age=c("2","3"), race=c("Black","White")))
with(nutr.lsm[[1]], interaction.plot(group, race, lsmean, type="b"))
with(nutr.lsm[[1]], interaction.plot(group, race, lsmean, type="b"))
# Hispanics seem exceptional; but, this doesn't test out due to very sparse data
print(nutr.lsm, omit=3)
nutr.lsm = lsmeans(nutr.aov, list(pairwise ~ group|race, pairwise ~ race|group),
at = list(age="3"))
with(nutr.lsm[[1]], interaction.plot(group, race, lsmean, type="b"))
# Hispanics seem exceptional; but, this doesn't test out due to very sparse data
print(nutr.lsm, omit=3)
?swiss
data(fiber)
ls()
detach()
library(lsmeans)
?fiber
?nutrition
q("no")
q("no")
library()
ls()
library()
data(experiment, package=multcompView)
data(experiment, package="multcompView"")
data(experiment, package="multcompView")
requireNamespace(multcompView)
requireNamespace("multcompView")
search()
attachNamespace("multcompView")
search()
example(multcompLetters)
lsmeans(exp_aov, cld~treatments)
library(lsmeans)
lsmeans(exp_aov, cld~treatments)[[1]]
source('~/Programming/R/devel/LSMEANS/lsmeans/R/cld.lsm.R')
lsmeans(exp_aov, cld~treatments)[[1]]
ls(all=TRUE)
library(lsmeans)
rm(.get.cld)
lsmeans(exp_aov, cld~treatments)[[1]]
lsmeans(exp_aov, cld~treatments, conf=99)[[1]]
lsmeans(exp_aov, cld~treatments, conf=99.9)[[1]]
lsmeans(exp_aov, cld~treatments, conf=99.99)[[1]]
lsmeans(exp_aov, cld~treatments, conf=1)[[1]]
lsmeans(exp_aov, cld~treatments, conf=.9999999)[[1]]
lsmeans(exp_aov, cld~treatments, conf=.9)[[1]]
lsmeans(exp_aov, cld~treatments, conf=.8)[[1]]
ls()
example(lsmeans)
lsmeans(Oats.lmer, cld ~ Variety*nitro)[[1]]
lsmeans(Oats.lmer, cld ~ Variety*nitro)[[1]]
lsmeans(Oats.lmer, cld ~ nitro|Variety)[[1]]
q("no")
installed.packages()["lme4",1:3]
data(Oats, package="nlme")
library(lme4)
Oats.lmer = lmer(yield ~ Variety*factor(nitro) + (1|Block/Variety),
subset = 1:26, data=Oats)
Oats.lmerp = lmer(yield ~ Variety*poly(nitro,2) + (1|Block/Variety),
subset = 1:26, data=Oats)
class(Oats.lmep)
class(Oats.lmerp)
source('~/Programming/R/devel/LSMEANS/lsmeans/R/recover.data.R')
.recover.data(Oats.lmerp)
q("no")
data(Oats, package="nlme")
Oats.lmer = lmer(yield ~ Variety*factor(nitro) + (1|Block/Variety),
subset = 1:26, data=Oats)
library(lme4)
Oats.lmer = lmer(yield ~ Variety*factor(nitro) + (1|Block/Variety),
subset = 1:26, data=Oats)
all.names(terms(Oats.lmer))
source('~/Programming/R/devel/LSMEANS/lsmeans/R/recover.data.R')
source('~/Programming/R/devel/LSMEANS/lsmeans/R/ref.grid.R')
ref.grid(Oats.lmer)
source('~/Programming/R/devel/LSMEANS/lsmeans/R/ref.grid.R')
ref.grid(Oats.lmer)
source('~/Programming/R/devel/LSMEANS/lsmeans/R/ref.grid.R')
ref.grid(Oats.lmer)
ref.grid(Oats.lmer, at=list(Variety="Victory"))
ref.grid(Oats.lmer, at=list(Variety="Victoy"))
ref.grid(Oats.lmer, at=list(Variety="Victory", nitro=seq(0,1,by=.25)))
ref.grid(Oats.lmer, at=list(Variety="Victory", nitro=seq(0,1,by=.25)), cov.reduce=FALSE)
ref.grid(Oats.lmer, at=list(Variety="Victory", nitro=seq(0,1,by=.25)), cov.reduce=function(x,nm)median(x))
ref.grid(Oats.lmer, at=list(Variety="Victory", nitro=seq(0,1,by=.25)), cov.reduce=function(x,nm) x[1]
)
source('~/Programming/R/devel/LSMEANS/lsmeans/test-data.R')
ref.grid(warp.data)
ref.grid(warp.data, cov.reduce=FALSE)
ref.grid(warp.data, cov.reduce=function(x,nm) median(x))
ref.grid(warp.data)
source('~/Programming/R/devel/LSMEANS/lsmeans/R/recover.data.R')
.recover.data(warp.with)
attr(.Last.data, "terms")
.recover.data(warp.with)
attr(.Last.value, "terms")
attributes(.recover.data(warp.with))
source('~/.active-rstudio-document')
ref.grid(Oats.lmer)
source('~/Programming/R/devel/LSMEANS/lsmeans/R/recover.data.R')
source('~/Programming/R/devel/LSMEANS/lsmeans/R/ref.grid.R')
ref.grid(Oats.lmer)
source('~/Programming/R/devel/LSMEANS/lsmeans/R/ref.grid.R')
ref.grid(Oats.lmer)
source('~/.active-rstudio-document')
ref.grid(Oats.lmer)
setMethod("show", "ref.grid", function(x) {
levs = x@levels
for (nm in names(lev)) {
cat(paste(nm, "= ", sep=""))
cat(paste(levs[[nm]], collapse = ", "))
cat("\n")
}
})
source('~/.active-rstudio-document')
ref.grid(Oats.lmer)
source('~/Programming/R/devel/LSMEANS/lsmeans/R/ref.grid.R')
ref.grid(Oats.lmer)
source('~/Programming/R/devel/LSMEANS/lsmeans/R/ref.grid.R')
ref.grid(Oats.lmer)
source('~/Programming/R/devel/LSMEANS/lsmeans/R/ref.grid.R')
ref.grid(Oats.lmer)
ref.grid(Oats.lmer)@grid
ref.grid(Oats.lmer)@levels
source('~/Programming/R/devel/LSMEANS/lsmeans/R/ref.grid.R')
print(ref.grid(Oats.lmer))
setMethod("print", "ref.grid", NULL)
print(ref.grid(Oats.lmer))
removeMethod("print", "ref.grid")
print(ref.grid(Oats.lmer))
showMethods("ref.grid")
showMethods("print")
showMethods("show")
showMethods(".recover.data")
ref.grid(Oats.lmer)
ref.grid(warp.data)
ref.grid(warp.data, cov.reduce=FALSE)
ref.grid(warp.data, cov.reduce=function(x,name) median(x))
coef(warp.data)
coef(Oats.lmer)
fixef(Oats.lmer)
ref.grid(Oats.lme)
q("no")
source('~/Programming/R/devel/LSMEANS/lsmeans/test-data.R')
ls()
source('~/Programming/R/devel/LSMEANS/lsmeans/R/recover.data.R')
source('~/Programming/R/devel/LSMEANS/lsmeans/R/ref.grid.R')
ref.grid(Oats.lme)
source('~/Programming/R/devel/LSMEANS/lsmeans/R/lsm.basis.R')
ref.grid(Oats.lme)
ref.grid(Oats.lmer)
og = .Last.value
og@X
og@V
og@nbasis
og@ddfm
namespace(lsmeans)
nameSpace(lsmeans)
?requireNamespace
loadedNameSpaces()
loadedNamespaces()
requireNamespace("lsmeans")
loadedNamespaces()
lsmeans:::.KRdf.mer
loadedNamespaces()
ls()
ref.grid(Oats.aov)
ref.grid(Oats.aove)
ref.grid(Oats.aov) -> oag
oag@X
oag
?format
getMethod("show","ref.grid")
source('~/.active-rstudio-document')
oag
q("no")
mkf = function(x) function(...) x
mkf(5)
mkf = function(x) eval(function(...) x)
mkf(5)
z=mkf(5+7)
z(5)
mkf = function(x) eval(function(...) substitute(x))
z=mkf(5+7)
z(6)
z
mkf = function(x) eval(function(...) eval(x))
mkf(6)
mkf(6)()
mkf = function(x) function(...) x
mkf(6)()
mkf(7+11-3)
.Last.value(5)
ls()
q("no")
ls()
source('~/Programming/R/devel/LSMEANS/lsmeans/test-data.R')
ls()
Oats
library(reshape)
?cast
cast(Oats, ~Block*Variety)
Oats.m = melt(Oats)
Oats.m
cats(Oats.m, yield+nitro ~ Block*Variety)
cast(Oats.m, yield+nitro ~ Block*Variety)
cast(Oats, yield+nitro ~ Block*Variety)
Oats
cast(Oats, yield ~ nitro ~ Block*Variety)
cast(Oats, ~Block*Varirety)
cast(Oats, ~Block*Variety)
cast(Oats, yield~Block*Variety)
Oats.mult = with(Oats, expand.grid(Variety=levels(Variety), Block=levels(Block)))
Oats.mult = cbind(Oats.mult, yield = matrix(Oats$yield, ncol=4))
Oats.mult
names(Oats.mult)
source('~/.active-rstudio-document')
Oats.mult
names(Oats.mult)
source('~/.active-rstudio-document')
Oats.mult
head(Oats, 14)
source('~/.active-rstudio-document')
Oats.mult
Oats.mult.lm = lm(Yield ~ Block + Variety, data = Oats.mult)
Oats.mult.lm = lm(yield ~ Block + Variety, data = Oats.mult)
summary(Oats.mult.lm)
cl;ass(Oats.mult.lm)
class(Oats.mult.lm)
Oats.mult.lm$qr
coef(Oats.mult)
coef(Oats.mult.lm)
vcov(Oats.mult.lm)
diag(vcov(Oats.mult.lm))
model.matrix(Oats.mult.lm)
manova(Oats.mult.lm)
summary(manova(Oats.mult.lm))
lmer(yield ~ Variety + (1|Block), data=Oats.mult)
names(Oats.mult.lm)
x = matrix(rnorm(6), ncol=2)
x
kronecker(c(1,1,1), x)
Oats.mult.lm$rank
coef(Oats.mult.lm)
dimnames(coef(Oats.mult.lm))
x = 1:5
x = c(x, ylevs=c(6:9))
x
x=list()
x = c(x, ylevs=c(6:9))
x
q("no")
source('~/Programming/R/devel/LSMEANS/lsmeans/R/recover.data.R')
source('~/Programming/R/devel/LSMEANS/lsmeans/R/lsm.basis.R')
source('~/Programming/R/devel/LSMEANS/lsmeans/R/ref.grid.R')
ls()
source('~/Programming/R/devel/LSMEANS/lsmeans/test-data.R')
ls()
ref.grid(Oats.lmer)
ref.grid(Oats.mult.lm)
source('~/Programming/R/devel/LSMEANS/lsmeans/R/lsm.basis.R')
ref.grid(Oats.mult.lm)
source('~/Programming/R/devel/LSMEANS/lsmeans/R/ref.grid.R')
ref.grid(Oats.mult.lm)
source('~/Programming/R/devel/LSMEANS/lsmeans/R/ref.grid.R')
ref.grid(Oats.mult.lm)
source('~/Programming/R/devel/LSMEANS/lsmeans/R/ref.grid.R')
ref.grid(Oats.mult.lm)
.Last.value@ref.levels
.Last.value@levels
q("no")
source('~/Programming/R/devel/LSMEANS/lsmeans/R/ref.grid.R')
source('~/Programming/R/devel/LSMEANS/lsmeans/R/lsm.basis.R')
source('~/Programming/R/devel/LSMEANS/lsmeans/R/recover.data.R')
source('~/Programming/R/devel/LSMEANS/lsmeans/test-data.R')
ref.grid(Oats.mult.lm)
source('~/Programming/R/devel/LSMEANS/lsmeans/R/ref.grid.R')
ref.grid(Oats.mult.lm)
source('~/Programming/R/devel/LSMEANS/lsmeans/R/ref.grid.R')
ref.grid(Oats.mult.lm)
source('~/Programming/R/devel/LSMEANS/lsmeans/R/ref.grid.R')
ref.grid(Oats.mult.lm)
source('~/Programming/R/devel/LSMEANS/lsmeans/R/ref.grid.R')
ref.grid(Oats.mult.lm)
omg = ref.grid(Oats.mult.lm)
omg@levels
omg = ref.grid(Oats.mult.lm, mult.resp=LETTERTS[1:3])
omg = ref.grid(Oats.mult.lm, mult.resp=list(yield=LETTERS[1:3]))
args(ref.grid)
omg = ref.grid(Oats.mult.lm, mult.levs=list(yield=LETTERS[1:3]))
omg = ref.grid(Oats.mult.lm, mult.levs=list(yield=LETTERS[1:4]))
omg
omg@levels
omg@roles
omg = ref.grid(Oats.mult.lm, mult.levs=list(yield=c(0,.2,.4,.6))
)
omg@levels
omg = ref.grid(Oats.mult.lm, mult.levs=list(nitro=c(0,.2,.4,.6)))
omg@levels
omg
source('~/Programming/R/devel/LSMEANS/lsmeans/R/ref.grid.R')
omg
omg@X
omg@bhat
ncol(omg@X)
nrow(omg@X)
omg
source('~/Programming/R/devel/LSMEANS/lsmeans/R/ref.grid.R')
ref.grid(Oats.mult.lm)
Oats.mult
Oats.mult$yield
dimnames(Oats.mult$yield)[[2]] = seq(0,.6,by=.2)
Oats.mult$yield
ref.grid(Oats.mult.lm)
Oats.mult.lm = lm(yield ~ Block + Variety, data = Oats.mult)
ref.grid(Oats.mult.lm)
omg2 = ref.grid(Oats.mult.lm, mult.levs=list(test=1:2,period=c("pre","post")))
omg2
source('~/Programming/R/devel/LSMEANS/lsmeans/R/ref.grid.R')
omg2
source('~/Programming/R/devel/LSMEANS/lsmeans/R/ref.grid.R')
omg2
expand.grid(test=1:2,period=c("pre","post"))
omg
q("no")
q("no")
q("no")
library(lsmeans)
example(MOats)
MOats.lm[[1]]
MOats.lm[[2]]
names(MOats.lm)
